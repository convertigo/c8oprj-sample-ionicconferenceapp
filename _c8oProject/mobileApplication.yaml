componentScriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_AppImport*/
        /*End_c8o_AppImport*/
        /*Begin_c8o_AppDeclaration*/
        	/*End_c8o_AppDeclaration*/
        /*Begin_c8o_AppConstructor*/
        		/*End_c8o_AppConstructor*/
        /*Begin_c8o_AppInitialization*/
                        statusBar.overlaysWebView(false);
                        statusBar.backgroundColorByHexString("#488aff");
                        statusBar.styleBlackOpaque();
                        /*End_c8o_AppInitialization*/
        /*Begin_c8o_AppFunction*/
        	/*End_c8o_AppFunction*/
        
tplProjectName: mobilebuilder_tpl_7_8_0
↓NavRouteSessionDetail [mobile.components.RouteComponent-1504624303318]: 
  comment: Navigation route concerning detail of sessions
  ↓FullSyncEvent [mobile.components.RouteFullsyncEvent-1504624338005]: 
    comment: 'When we get on local database with the following marker : detail (as set in properties)'
    marker: detail
    source: IonicConferenceApp.conferenceapp
  ↓DataAction [mobile.components.RouteDataActionComponent-1504624314774]: 
    action: push
    comment: Push a new SessionDetail page
    page: IonicConferenceApp.MobileApplication.Application.SessionDetail
↓NavRouteSpeakerDetail [mobile.components.RouteComponent-1504729759280]: 
  comment: Navigation route concerning detail of speakers
  ↓FullSyncEvent [mobile.components.RouteFullsyncEvent-1504729772592]: 
    comment: 'When get on a local database with the follwing marker: speakerDet (as set in the properties)'
    marker: speakerDet
    source: IonicConferenceApp.conferenceapp
  ↓DataAction [mobile.components.RouteDataActionComponent-1504729811615]: 
    action: push
    comment: Push a new SpeakerDetail page
    page: IonicConferenceApp.MobileApplication.Application.SpeakerDetail
↓Menu [mobile.components.UIDynamicMenu-1500890597895]: 🗏 mobileMenus/Menu.yaml
↓Tutorial [mobile.components.PageComponent-1504014856176]: 🗏 mobilePages/Tutorial.yaml
↓TabsPage [mobile.components.PageComponent-1504020559122]: 🗏 mobilePages/TabsPage.yaml
↓Schedule [mobile.components.PageComponent-1504021313143]: 🗏 mobilePages/Schedule.yaml
↓SpeakerList [mobile.components.PageComponent-1504100582101]: 🗏 mobilePages/SpeakerList.yaml
↓ScheduleFilter [mobile.components.PageComponent-1504603611259]: 🗏 mobilePages/ScheduleFilter.yaml
↓SessionDetail [mobile.components.PageComponent-1504620890402]: 🗏 mobilePages/SessionDetail.yaml
↓SpeakerDetail [mobile.components.PageComponent-1504729040197]: 🗏 mobilePages/SpeakerDetail.yaml
↓Map [mobile.components.PageComponent-1504731152608]: 🗏 mobilePages/Map.yaml
↓About [mobile.components.PageComponent-1504734225285]: 🗏 mobilePages/About.yaml
↓AboutPopover [mobile.components.PageComponent-1504735992549]: 🗏 mobilePages/AboutPopover.yaml
↓Theme [mobile.components.UITheme-1491635018260]: 
  comment: Global color themes can be customized here
  styleContent: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        →: |
          '// Ionic Variables and Theming. For more info, please see:
          // http://ionicframework.com/docs/v2/theming/ 
          $font-path: "../assets/fonts";
          
          @import "ionic.globals";
          
          
          // Shared Variables
          // --------------------------------------------------
          // To customize the look and feel of this app, you can override
          // the Sass variables found in Ionic''s source scss files.
          // To view all the possible Ionic variables, see:
          // http://ionicframework.com/docs/v2/theming/overriding-ionic-variables/
          
          
          
          
          // Named Color Variables
          // --------------------------------------------------
          // Named colors makes it easy to reuse colors on various components.
          // It''s highly recommended to change the default colors
          // to match your app''s branding. Ionic uses a Sass map of
          // colors so you can add, rename and remove colors as needed.
          // The "primary" color is the only required color in the map.
          
          $colors: (
                primary:    #488aff,
          	  secondary:  #32db64,
          	  danger:     #f53d3d,
          	  light:      #f4f4f4,
          	  dark:       #222,
          	  favorite:   #69BB7B,
          	  twitter:    #1da1f4,
          	  google:     #dc4a38,
          	  vimeo:      #23b6ea,
          	  facebook:   #3b5998
          );
          
          
          // App iOS Variables
          // --------------------------------------------------
          // iOS only Sass variables can go here
          
          
          
          
          // App Material Design Variables
          // --------------------------------------------------
          // Material Design only Sass variables can go here
          
          // Use the primary color as the background for the toolbar-md-background
          $toolbar-md-background:                   color($colors, primary);
          
          // Change the color of the segment button text
          $toolbar-md-active-color:                 #fff;
          
          
          // App Windows Variables
          // --------------------------------------------------
          // Windows only Sass variables can go here
          
          
          
          
          // App Theme
          // --------------------------------------------------
          // Ionic apps can have different themes applied, which can
          // then be future customized. This import comes last
          // so that the above variables are used and Ionic''s
          // default are overridden.
          
          @import "ionic.theme.default";
          
          
          // Ionicons
          // --------------------------------------------------
          // The premium icon font for Ionic. For more info, please see:
          // http://ionicframework.com/docs/v2/ionicons/
          
          @import "ionic.ionicons";
          
          
          // Fonts
          // --------------------------------------------------
          
          @import "roboto";
          @import "noto-sans";'
↓Style [mobile.components.UIStyle-1491635462437]: 
  comment: You can add some global application styles here
  styleContent: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        →: |
          '.content {
          	/* add some styling CSS rules here for the body of your app
          	   for example,
          	 		background-color: your color; 
          	 		background-image: url(some background image);
          	*/
          }
          
          .toolbar-background {
          	/* add some styling CSS rules here for the Headers and Footers
          	   for example,
          	 		background-color: your color; 
          	*/
          }
          '